@page "/Profile"
@using _4Lv2.DateBase
@using _4Lv2.Models
@inject ModelContext EF
@inject NavigationManager NM
@inject Blazored.LocalStorage.ILocalStorageService LS
@rendermode InteractiveServer
<div class="window-cont">
<div class="profile-container">
    <div class="profile-title">ПРОФИЛЬ</div>
    <div class="profile-subtitle">Зарегистрируйтесь или войдите в аккаунт</div>
    <div class="form-group-profile">
        <input @bind="_user.Login" class="input-profile" type="text" placeholder="ВАШ ЛОГИН">
    </div>
    <div class="form-group-profile">
        <input @bind="_user.Password" class="input-profile" type="password" placeholder="ПАРОЛЬ">
    </div>
    <div class="button-group-profile">
        <button @onclick="Reg" class="btn-profile">ЗАРЕГЕСТРИРОВАТЬСЯ</button>
        <button @onclick="Auth" class="btn-profile">ВОЙТИ</button>
    </div>
    <a>@Message</a>
</div>
</div>

@code {
    private User _user = new User();
    private User AuthUser = new User();
    private string Message;
    
    private void Reg()
    {
        Message = "Вы успешно зарегестрированы";
        EF.Add(_user);
        EF.SaveChanges();
        LS.SetItemAsync("IsAuth", true);
        LS.SetItemAsync("UserId", _user.Id);
        NM.NavigateTo("/");
    }

    private void Auth()
    {
        AuthUser = EF.Users.FirstOrDefault(user => user.Login == _user.Login);
        if (AuthUser != null && AuthUser.Password == _user.Password)
        {
            LS.SetItemAsync("IsAuth", true);
            LS.SetItemAsync("UserId", AuthUser.Id);
            NM.NavigateTo("/");
        }
        else
        {
            Message = "Ты кто?! Зарегестрируйся";
        }
    }
}